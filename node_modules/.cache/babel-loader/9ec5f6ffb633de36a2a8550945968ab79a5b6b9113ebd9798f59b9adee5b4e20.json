{"ast":null,"code":"var _jsxFileName = \"/Users/owaismahmood/Documents/final-react/weather/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport InputForm from './InputForm';\nimport WeatherResult from './WeatherResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [country, setCountry] = useState('');\n  const [state, setState] = useState('');\n  const [result, setResult] = useState('');\n  const getCountryCode = async country => {\n    try {\n      console.log(\"!\");\n      //TODO: WHY DOES THIS TAKE SO LONG FOR INCORRECT INPUTS\n      const response = await fetch(`https://restcountries.com/v3.1/name/${country}`);\n      console.log(\"!1\");\n      if (!response.ok) {\n        throw new Error(\"Country Name not found\");\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"ERROR: \" + error.message);\n      setResult(\"Country name not found\");\n      return null;\n    }\n  };\n  const loadWeather = async () => {\n    const apikey = 'd5d0c58cec7185d2e06bf2f5b779e6be';\n    let countrycode = '';\n    try {\n      if (country !== '') {\n        const countryData = await getCountryCode(country);\n        console.log(countryData);\n        if (countryData == null) {\n          throw new Error(`HTTP error! Cannot read Country name`);\n        }\n        countrycode = countryData[0].cca2;\n      }\n      const responseCity = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${city},${state},${countrycode}&appid=${apikey}`);\n      if (!responseCity.ok) {\n        throw new Error(`HTTP error! status: ${responseCity.status}`);\n      }\n      console.log(`http://api.openweathermap.org/geo/1.0/direct?q=${city},${state},${countrycode}&appid=${apikey}`);\n      const data = await responseCity.json();\n      if (data[0].name.toLowerCase() !== city.toLowerCase()) {\n        throw new Error(\"City name not found\");\n      }\n      const {\n        lat,\n        lon,\n        state: responseState,\n        country: responseCountry\n      } = data[0];\n      const responseWeather = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apikey}&units=metric`);\n      const weatherData = await responseWeather.json();\n      if (state) {\n        console.log(\"state\");\n        setResult(`${weatherData.main.temp}째C: ${city.toUpperCase()}, ${responseState.toUpperCase()}`);\n      } else {\n        console.log(responseCountry);\n        setResult(`${weatherData.main.temp}째C: ${city.toUpperCase()}, ${responseCountry.toUpperCase()}`);\n      }\n    } catch (error) {\n      console.error(\"Error: \" + error.message);\n      setResult(\"Incorrect entry\");\n    }\n  };\n  const onCityChange = value => {\n    console.log(value);\n    setCity(value);\n  };\n  const onCountryChange = value => {\n    setCountry(value);\n  };\n  const onStateChange = value => {\n    setState(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      city: city,\n      country: country,\n      state: state,\n      onCityChange: onCityChange,\n      onCountryChange: onCountryChange,\n      onStateChange: onStateChange,\n      onSubmit: loadWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherResult, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LGPqcJalRVl4oZbtHnaBj0dDE7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputForm","WeatherResult","jsxDEV","_jsxDEV","App","_s","city","setCity","country","setCountry","state","setState","result","setResult","getCountryCode","console","log","response","fetch","ok","Error","data","json","error","message","loadWeather","apikey","countrycode","countryData","cca2","responseCity","status","name","toLowerCase","lat","lon","responseState","responseCountry","responseWeather","weatherData","main","temp","toUpperCase","onCityChange","value","onCountryChange","onStateChange","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/owaismahmood/Documents/final-react/weather/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport './App.css';\nimport InputForm from './InputForm';\nimport WeatherResult from './WeatherResult';\n\nconst App = () => {\n  const [city, setCity] = useState('');\n  const [country, setCountry] = useState('');\n  const [state, setState] = useState('');\n  const [result, setResult] = useState('');\n\n\n  const getCountryCode = async (country) => {\n    try {\n      console.log(\"!\")\n      //TODO: WHY DOES THIS TAKE SO LONG FOR INCORRECT INPUTS\n      const response = await fetch(`https://restcountries.com/v3.1/name/${country}`);\n      console.log(\"!1\")\n\n      if (!response.ok) {\n        throw new Error(\"Country Name not found\");\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"ERROR: \" + error.message);\n      setResult(\"Country name not found\");\n      return null;\n    }\n  };\n\n  const loadWeather = async () => {\n    const apikey = 'd5d0c58cec7185d2e06bf2f5b779e6be';\n    let countrycode = '';\n    try {\n    if (country !== '') {\n      const countryData = await getCountryCode(country);\n      console.log(countryData)\n      if (countryData == null) {\n        throw new Error(`HTTP error! Cannot read Country name`);\n      }\n      countrycode = countryData[0].cca2;\n    }\n\n\n      const responseCity = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${city},${state},${countrycode}&appid=${apikey}`);\n      if (!responseCity.ok) {\n        throw new Error(`HTTP error! status: ${responseCity.status}`);\n      }\n      console.log(`http://api.openweathermap.org/geo/1.0/direct?q=${city},${state},${countrycode}&appid=${apikey}`)\n      const data = await responseCity.json();\n\n      if (data[0].name.toLowerCase() !== city.toLowerCase()) {\n        throw new Error(\"City name not found\");\n      }\n\n      const { lat, lon, state: responseState, country: responseCountry } = data[0];\n      const responseWeather = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apikey}&units=metric`);\n      const weatherData = await responseWeather.json();\n\n      if (state) {\n        console.log(\"state\")\n        setResult(`${weatherData.main.temp}째C: ${city.toUpperCase()}, ${responseState.toUpperCase()}`);\n      } else {\n        console.log(responseCountry)\n        setResult(`${weatherData.main.temp}째C: ${city.toUpperCase()}, ${responseCountry.toUpperCase()}`);\n      }\n    } catch (error) {\n      console.error(\"Error: \" + error.message);\n      setResult(\"Incorrect entry\");\n    }\n  };\n\n  const onCityChange = (value) => {\n    console.log(value)\n    setCity(value);\n  };\n\n  const onCountryChange = (value) => {\n    setCountry(value);\n  };\n\n  const onStateChange = (value) => {\n    setState(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <InputForm\n        city={city}\n        country={country}\n        state={state}\n        onCityChange={onCityChange}\n        onCountryChange={onCountryChange}\n        onStateChange={onStateChange}\n        onSubmit={loadWeather}\n      />\n      <WeatherResult result={result} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}